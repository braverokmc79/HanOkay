<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.ana.mapper.UserMapper">

	<resultMap id="UserVO" type="com.ana.domain.UserVO">
		<result property="userNum" column="USER_NUM"/>
		<result property="userEmail" column="U_PWD"/>
		<result property="userPwd" column="U_EMAIL"/>
		<result property="userLastName" column="U_LASTNAME"/>
		<result property="userFstName" column="U_FSTNAME"/>
		<result property="userPhone" column="U_PHONE"/>
		<result property="userBirthday" column="U_BIRTHDAY"/>
		<result property="userRegisterDate" column="U_REGDATE" />
		<result property="userRegisterMethod" column="U_REGMETHOD"/>
		<result property="userPriv" column="U_PRIV"/>
		<result property="userProfilePicUrl" column="U_PURL" />
		<result property="userProfilePicName" column="U_PICNAME" />
		<result property="userIntroduction" column="U_INTRO" />
		<result property="userLanguage" column="U_LANG" />
		<result property="userStatusCode" column="U_STAT_CODE" />
		<result property="bizRegisterNumber" column="BIZ_REGNUM" />
		<result property="bizRegisterPicUrl" column="BIZ_REGPURL" />
		<result property="userAuthCode" column="U_AUTH_CODE" />
	</resultMap>

	<!-- id와 pwd가 일치하는 user의 모든 정보를 읽어오는 쿼리 -->
	<select id="getUserById" resultMap="UserVO">
	select * from tuser where u_email=#{userEmail}
	</select>
	
	
	<!-- DB에 존재하는 id와 pwd인지 확인하는 쿼리 -->
	<select id="isValidUser" resultType="int">
	select count(*) from tuser
	where u_email=#{userEmail} and u_pwd=#{userPwd}
	</select>
	
	<!-- 이메일 중복 검사 쿼리 -->
	<select id="checkEmail" resultType="int">
	select count(*) from tuser
	where u_email=#{userEmail}
	</select>
	
	<!-- 유저 정보 읽어오는 쿼리 -->
	<select id="readUser" resultMap="UserVO">
	select * from tuser where USER_NUM = #{userNum}
	</select>
	
	<!-- 유저 테이블의 모든 유저 정보 가져오는 쿼리 -->
	<select id="getListOfUsers" resultMap="UserVO">
	select * from tuser
	</select>
	
	<!-- 유저 테이블에 한 행 삽입하는 쿼리 -->
	<insert id="insertUser">
	insert into tuser(USER_NUM, U_EMAIL, U_PWD, U_LASTNAME, U_FSTNAME, U_BIRTHDAY)
	values(concat('U',SEQ_TUSER.nextval),#{userEmail}, #{userPwd}, #{userLastName}, #{userFstName}, #{userBirthday})
	</insert>
	
	
	<insert id="insertSelectKey">
	<selectKey resultType="String" order="BEFORE" keyProperty="userNum">
	select concat('U',SEQ_TUSER.nextval) from dual 
	</selectKey>
	insert into tuser(USER_NUM, U_EMAIL, U_PWD, U_LASTNAME, U_FSTNAME, U_BIRTHDAY) 
	values(#{userNum}, #{userEmail}, #{userPwd}, #{userLastName}, #{userFstName}, #{userBirthday}) 
	</insert>
	
	<!-- 유저 테이블에 해당 유저 번호가진 행 삭제하는 쿼리 -->
	<delete id="deleteUser">
	delete from tuser where USER_NUM = #{userNum}
	</delete>
	
	<!-- 유저 테이블에 해당 유저 번호 가진 유저 정보 업데이트 하는 쿼리 -->
	<update id="updateUser">
	update tuser
	set
	U_EMAIL=#{userEmail}, U_PWD=#{userPwd}, U_LASTNAME=#{userLastName}, U_FSTNAME=#{userFstName}, U_BIRTHDAY=#{userBirthday}
	where USER_NUM=#{userNum}
	</update>
	
	
	
	<select id="isHost" resultMap="UserVO">
	select * from tuser where USER_NUM = #{userNum}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- ***************** 림쨩의 영역 ****************-->
	<update id="becomeHost">
		update tuser set
		BIZ_REGNUM =#{bizRegisterNumber}, U_STAT_CODE=#{userStatusCode}
		where USER_NUM =#{userNum}
	</update>
	











</mapper>